# this file contains test cases for ruleset defined in global scope

edge = {(1,2), (2,3)}
correct_result = {(1,2), (1,3), (2,3)}
path = {}

def rules_trans():
    path(x,y), if_(edge(x,y))
    path(x,y), if_(edge(x,z), path(z,y))


# !!! both of the followng test cases fail. The global var "path" is not updated correctly.

# test if there is an implicit call to infer rules_trans and the global "path" is updated
if path != correct_result:
    print('WRONG RESULT: QUERY 1 !!!!!!!!!!!\nQuery result: ' + str(path))

# test if update a base predicate will automatically call to infer as expected
edge = {(4,5), (5,6)}
correct_result = {(4,5), (4,6), (5,6)}
if path != correct_result:
    print('WRONG RESULT: QUERY 2 !!!!!!!!!!!\nQuery result: ' + str(path))

# test that updates to derived predicates of a ruleset outside the ruleset definition are not allowed.
# !!! this test case fails. There is no error when updating a derived predicate outside the ruleset def.
path = {(1,2)}
q_r_1 = infer(rule = rules_trans)
print(q_r_1)
print('End of tests')