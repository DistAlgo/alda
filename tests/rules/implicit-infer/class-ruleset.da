# test cases for implicit infer for rule set defined in a class scope

class Graph(process):
    def setup(edge):
        self.path = None

    def rules_trans():
        path(x,y), if_(edge(x,y))
        path(x,y), if_(edge(x,z), path(z,y))

    def run():
        correct_result = {(1,2), (1,3), (2,3)}
        # test if there is an implicit call to infer rules_trans and the "path" field is updated
        if path != correct_result:
            print('WRONG RESULT: QUERY 1!\npath: ' + str(path))

        # test if update a base predicate will automatically call to infer as expected
        edge = {(4,5), (5,6)}
        correct_result = {(4,5), (4,6), (5,6)}
        if edge == {(4,5), (5,6)}:
            if path != correct_result:
                print('TEST 1: WRONG RESULT: QUERY 2!\npath: ' + str(path))
        else:
            print('TEST 1: BASE PREDICATE IS NOT UPDATED CORRECTLY 1!\nedge: ' + str(edge))

        edge.add((6,7))
        correct_result = {(4,5), (4,6), (4,7), (5,6), (5,7), (6,7)}
        if edge == {(4,5), (5,6), (6,7)}:
            if path != correct_result:
                print('TEST 2: WRONG RESULT: QUERY 3!\npath: ' + str(path))
        else:
            print('TEST 2: BASE PREDICATE IS NOT UPDATED CORRECTLY 2!\nedge: ' + str(edge))

        edge -= {(6,7)}
        correct_result = {(4,5), (4,6), (5,6)}
        if edge == {(4,5), (5,6)}:
            if path != correct_result:
                print('TEST 3: WRONG RESULT: QUERY 4!\npath: ' + str(path))
        else:
            print('TEST 3: BASE PREDICATE IS NOT UPDATED CORRECTLY 3!\nedge: ' + str(edge))

        # test that derived predicates cannot be updated outside the rule set definition.
        # !!! this test case fails. the update to path is permitted but should produce an exception or error message.
        path.add((1,2))
        if path == correct_result | {(1,2)}:
            print('TEST 4: DERIVED PREDICATE CAN BE UPDATED OUTSIDE THE RULE SET!')
        elif path == correct_result:
            print('TEST 4: UPDATE TO DERIVED PREDICATE IS SILENTLY IGNORED!\npath: ' + str(path))

        # !!! this test case fails. the update to path is silently ignored but should produce an exception or error message.
        path = {(1,2)}
        if path == {(1,2)}:
            print('TEST 5: DERIVED PREDICATE CAN BE UPDATED OUTSIDE THE RULE SET!')
        elif path == correct_result:
            print('TEST 5: UPDATE TO DERIVED PREDICATE IS SILENTLY IGNORED!\npath: ' + str(path))

def main():
    edge_local = {(1,2), (2,3)}
    o = new(Graph, [edge_local])
    start(o)
