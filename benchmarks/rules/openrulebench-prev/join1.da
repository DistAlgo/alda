def rules_join1():
  a(X, Y), if_(b1(X, Z),b2(Z, Y))
  b1(X, Y), if_(c1(X, Z),c2(Z, Y))
  b2(X, Y), if_(c3(X, Z),c4(Z, Y))
  c1(X, Y), if_(d1(X, Z),d2(Z, Y))

def query_a(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['a'])

def query_b1(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b1'])

def query_b2(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b2'])

def query_bf_a(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['a(1,_)'])

def query_bf_b1(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b1(1,_)'])

def query_bf_b2(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b2(1,_)'])

def query_fb_a(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['a(_,1)'])

def query_fb_b1(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b1(_,1)'])

def query_fb_b2(facts):
  return infer(rules=rules_join1, bindings=[(pred, facts[pred]) for pred in facts], queries=['b2(_,1)'])
