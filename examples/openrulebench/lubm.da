def rules_lubm():
  employee(X), if_(administrativeStaff(X))
  employee(X), if_(faculty(X))
  faculty(X), if_(lecturer(X))
  faculty(X), if_(postDoc(X))
  faculty(X), if_(professor(X))
  administrativeStaff(X), if_(clericalStaff(X))
  administrativeStaff(X), if_(systemsStaff(X))
  professor(X), if_(assistantProfessor(X))
  professor(X), if_(associateProfessor(X))
  professor(X), if_(fullProfessor(X))
  professor(X), if_(visitingProfessor(X))
  professor(X), if_(chair(X))
  chair(X), if_(headOf(X, Y),department(Y))
  person(X), if_(chair(X))
  professor(X), if_(dean(X))
  dean(X), if_(headOf(X, Y),college(Y))
  person(X), if_(dean(X))
  director(X), if_(headOf(X, Y),program(Y))
  person(X), if_(director(X))
  employee(X), if_(worksFor_static(X, Y),organization(Y))
  person(X), if_(employee(X))
  person(X), if_(graduateStudent(X))
  student(X), if_(researchAssistant(X))
  student(X), if_(takesCourse(X, Y),course_static(Y))
  person(X), if_(student(X))
  teachingAssistant_static(X), if_(teachingAssistantOf(X, Y),course_static(Y))
  person(X), if_(teachingAssistant_static(X))
  student(X), if_(undergraduateStudent(X))
  organization(X), if_(college(X))
  organization(X), if_(department(X))
  organization(X), if_(institute(X))
  organization(X), if_(program(X))
  organization(X), if_(researchGroup_static(X))
  organization(X), if_(university_static(X))
  publication_static(X), if_(article(X))
  publication_static(X), if_(book(X))
  publication_static(X), if_(manual(X))
  publication_static(X), if_(software(X))
  publication_static(X), if_(specification(X))
  publication_static(X), if_(unofficialPublication(X))
  article(X), if_(conferencePaper(X))
  article(X), if_(journalArticle(X))
  article(X), if_(technicalReport(X))
  xwork(X), if_(course_static(X))
  xwork(X), if_(research(X))
  course_static(X), if_(graduateCourse_static(X))
  person(X), if_(advisor(X, _))
  professor(Y), if_(advisor(_, Y))
  organization(X), if_(affiliatedOrganizationOf(X, _))
  organization(Y), if_(affiliatedOrganizationOf(_, Y))
  organization(X), if_(affiliateOf(X, _))
  person(Y), if_(affiliateOf(_, Y))
  person(X), if_(age(X, _))
  person(X), if_(degreeFrom(X, _))
  university_static(Y), if_(degreeFrom(_, Y))
  hasAlumnus(X, Y), if_(degreeFrom(Y, X))
  university_static(X), if_(hasAlumnus(X, _))
  person(Y), if_(hasAlumnus(_, Y))
  degreeFrom(X, Y), if_(doctoralDegreeFrom(X, Y))
  person(X), if_(doctoralDegreeFrom(X, _))
  university_static(Y), if_(doctoralDegreeFrom(_, Y))
  person(X), if_(emailAddress(X, _))
  worksFor_static(X, Y), if_(headOf(X, Y))
  schedule(X), if_(listedCourse(X, _))
  course_static(Y), if_(listedCourse(_, Y))
  degreeFrom(X, Y), if_(mastersDegreeFrom(X, Y))
  person(X), if_(mastersDegreeFrom(X, _))
  university_static(Y), if_(mastersDegreeFrom(_, Y))
  degreeFrom(X, Y), if_(undergraduateDegreeFrom(X, Y))
  person(X), if_(undergraduateDegreeFrom(X, _))
  university_static(Y), if_(undergraduateDegreeFrom(_, Y))
  organization(X), if_(member(X, _))
  person(Y), if_(member(_, Y))
  member(X, Y), if_(memberOf_static(Y, X))
  organization(X), if_(orgPublication(X, _))
  publication_static(Y), if_(orgPublication(_, Y))
  publication_static(X), if_(publicationAuthor(X, _))
  person(Y), if_(publicationAuthor(_, Y))
  publication_static(X), if_(publicationDate(X, _))
  publication_static(X), if_(publicationResearch(X, _))
  research(Y), if_(publicationResearch(_, Y))
  researchGroup_static(X), if_(researchProject(X, _))
  research(Y), if_(researchProject(_, Y))
  software(X), if_(softwareDocumentation(X, _))
  publication_static(Y), if_(softwareDocumentation(_, Y))
  software(X), if_(softwareVersion(X, _))
  organization(X), if_(subOrganizationOf_0(X, _))
  organization(Y), if_(subOrganizationOf_0(_, Y))
  subOrganizationOf_0(X, Y), if_(subOrganizationOf(X, Y))
  subOrganizationOf_0(X, Z), if_(subOrganizationOf(X, Y),subOrganizationOf_0(Y, Z))
  faculty(X), if_(teacherOf(X, _))
  course_static(Y), if_(teacherOf(_, Y))
  teachingAssistant_static(X), if_(teachingAssistantOf(X, _))
  course_static(Y), if_(teachingAssistantOf(_, Y))
  person(X), if_(telephone(X, _))
  professor(X), if_(tenured(X, _))
  person(X), if_(title(X, _))
  memberOf_static(X, Y), if_(worksFor_static(X, Y))
  university_static(Y), if_(university(Y))
  worksFor_static(X, Y), if_(worksFor(X, Y))
  memberOf_static(X, Y), if_(memberOf(X, Y))
  researchGroup_static(X), if_(researchGroup(X))
  publication_static(X), if_(publication(X))
  course_static(Y), if_(course(Y))
  graduateCourse_static(X), if_(graduateCourse(X))
  teachingAssistant_static(X), if_(teachingAssistant(X))
  query1_1(X), if_(takesCourse(X, 'http://www.Department0.University0.edu/GraduateCourse0'),graduateStudent(X))
  query2_1(X, Y, Z), if_(graduateStudent(X),memberOf_static(X, Z),undergraduateDegreeFrom(X, Y),university_static(Y),department(Z),subOrganizationOf_0(Z, Y))
  query9_1(X, Y, Z), if_(advisor(X, Y),teacherOf(Y, Z),takesCourse(X, Z),student(X),faculty(Y),course_static(Z))


def query_1(facts):
  empty_list = ["clericalStaff", "systemsStaff", "postDoc", "visitingProfessor", "college", "program", "institute", "conferencePaper", "journalArticle", "technicalReport", "book", "manual", "specification", "unofficialPublication", "researchProject", "publicationResearch", "affiliateOf", "affiliatedOrganizationOf", "age", "listedCourse", "orgPublication", "publicationDate", "softwareDocumentation", "tenured", "softwareVersion", "title"]
  for el in empty_list:
    facts[el] = facts[el] or []
  
  return infer(rule=rules_lubm, bindings=[(pred, facts[pred]) for pred in facts], queries=['query1_1'])

def query_2(facts):
  empty_list = ["clericalStaff", "systemsStaff", "postDoc", "visitingProfessor", "college", "program", "institute", "conferencePaper", "journalArticle", "technicalReport", "book", "manual", "specification", "unofficialPublication", "researchProject", "publicationResearch", "affiliateOf", "affiliatedOrganizationOf", "age", "listedCourse", "orgPublication", "publicationDate", "softwareDocumentation", "tenured", "softwareVersion", "title"]
  for el in empty_list:
    facts[el] = facts[el] or []
  
  return infer(rule=rules_lubm, bindings=[(pred, facts[pred]) for pred in facts], queries=['query2_1'])

def query_9(facts):
  empty_list = ["clericalStaff", "systemsStaff", "postDoc", "visitingProfessor", "college", "program", "institute", "conferencePaper", "journalArticle", "technicalReport", "book", "manual", "specification", "unofficialPublication", "researchProject", "publicationResearch", "affiliateOf", "affiliatedOrganizationOf", "age", "listedCourse", "orgPublication", "publicationDate", "softwareDocumentation", "tenured", "softwareVersion", "title"]
  for el in empty_list:
    facts[el] = facts[el] or []
  
  return infer(rule=rules_lubm, bindings=[(pred, facts[pred]) for pred in facts], queries=['query9_1'])

