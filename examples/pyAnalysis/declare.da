import os

class VariableDeclare(process):
	def setup(filename, pkgInfo=None):
		self.Add = dict()
		self.alias = dict()
		self.And = dict()
		self.arg = dict()
		self.arguments = dict()
		self.Assert = dict()
		self.Assign = dict()
		self.Attribute = dict()
		self.AugAssign = dict()
		self.BinOp = dict()
		self.BitAnd = dict()
		self.BitOr = dict()
		self.BitXor = dict()
		# self.bool = dict()
		self.BoolOp = dict()
		self.Break = dict()
		self.Bytes = dict()
		self.Call = dict()
		self.ClassDef = dict()
		self.Collection = dict()
		self.Compare = dict()
		self.comprehension = dict()
		self.Continue = dict()
		self.Del = dict()
		self.Delete = dict()
		self.Dict = dict()
		self.DictComp = dict()
		self.Div = dict()
		self.Ellipsis = dict()
		self.Eq = dict()
		self.ExceptHandler = dict()
		self.Expr = dict()
		self.ExtSlice = dict()
		self.FloorDiv = dict()
		self.For = dict()
		self.FormattedValue = dict()
		self.FunctionDef = dict()
		self.GeneratorExp = dict()
		self.Global = dict()
		self.Gt = dict()
		self.GtE = dict()
		self.If = dict()
		self.IfExp = dict()
		self.Import = dict()
		self.ImportFrom = dict()
		self.In = dict()
		self.Index = dict()
		self.Invert = dict()
		self.Is = dict()
		self.is_Sub = dict()
		self.IsNot = dict()
		self.JoinedStr = dict()
		self.keyword = dict()
		self.Lambda = dict()
		self.List = dict()
		self.ListComp = dict()
		self.Load = dict()
		self.LShift = dict()
		self.Lt = dict()
		self.LtE = dict()
		self.Member = dict()
		self.Mod = dict()
		self.Module = dict()
		self.Mult = dict()
		self.Name = dict()
		self.NameConstant = dict()
		self.nodeDict = dict()
		self.Nonlocal = dict()
		self.Not = dict()
		self.NotEq = dict()
		self.NotIn = dict()
		self.Num = dict()
		self.Or = dict()
		self.Pass = dict()
		self.Pow = dict()
		self.Raise = dict()
		self.Return = dict()
		self.RShift = dict()
		self.Set = dict()
		self.SetComp = dict()
		self.Slice = dict()
		self.Starred = dict()
		self.Store = dict()
		self.Str = dict()
		self.Sub = dict()
		self.Subscript = dict()
		self.Try = dict()
		self.Tuple = dict()
		self.UAdd = dict()
		self.UnaryOp = dict()
		self.USub = dict()
		self.ValueDict = dict()
		self.ValueIdDict = dict()
		self.While = dict()
		self.With = dict()
		self.withitem = dict()
		self.Yield = dict()
		self.YieldFrom = dict()

		# self.valueTag = {'complex', 'int', 'float', 'str', 'bytes'}
		self.packName = os.path.basename(filename)
		self.namespaceDict = {1:'Class',2:'Function',3:'Variable'}
		self.funcs = dict()
		restore(name=filename,full=True)
		f = open(pkgInfo)
		self.sub_pkg = {eval(x)[1:] for x in f if x}
		f.close()







