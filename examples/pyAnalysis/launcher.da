import sys,os, importlib

DEFAULT_FILE = 'distalgo' # madpy, hylaa, AeroBenchVVPython, numpy, scikit-learn, sklearn, pytorch, pandas, scipy, matplotlib, sympy, django
DEFAULT_MODE = 'rule' # python, distalgo, combine, rule
DEFAULT_ANALYZER = 'LoopAnalyzer'	# LoopAnalyzer, LoopToQuery, NumpyAnalyzer, ModuleAnalyzer, ClassAnalyzer
HandlerRoute = {
	'ruleLoopAnalyzer': ('loop_analyzer', 'LoopAnalyzer', 'loopdepth'),
	'ruleLoopToQuery': ('loop-to-query', 'LoopAnalyzer', 'candidate'), # candidate, forToCompSimple
	'ruleNumpyAnalyzer': ('numpy_analyzer', 'NumpyAnalyzer', 'numpy'),
	'ruleModuleAnalyzer': ('module_analyzer', 'ModuleAnalyzer', 'import'),
	'pythonClassAnalyzer': ('subclass_python', 'ClassAnalyzer', 'subclass'),
	'distalgoClassAnalyzer': ('subclass_distalgo', 'ClassAnalyzer', 'subclass'),
	'ruleClassAnalyzer': ('subclass_rule', 'ClassAnalyzer', 'subclass'),
	'combineClassAnalyzer': ('subclass_combine', 'ClassAnalyzer', 'subclass'),
	'combineDAGAnalyzer': ('classstructure_combine', 'DAGAnalyzer', 'classstructure'),
	'combineFuncForLoopAnalyzer': ('func_with_loop', 'FuncAnalyzer', 'funcwithloop'),
	'combineFuncNumpyAnalyzer': ('func_with_numpy', 'FuncNumpyAnalyzer', 'funcwithnumpy')
}

def main():
	print(sys.argv)
	analyzer = DEFAULT_ANALYZER if len(sys.argv) < 2 else sys.argv[1]
	package = DEFAULT_FILE if len(sys.argv) < 3 else sys.argv[2]
	mode = DEFAULT_MODE if len(sys.argv) < 5 else sys.argv[4]
	query = HandlerRoute[mode+analyzer][2] if len(sys.argv) < 4 else sys.argv[3]
	
	file = importlib.import_module(HandlerRoute[mode+analyzer][0])
	Analyzer = eval('file.'+HandlerRoute[mode+analyzer][1])
	o = Analyzer(package,mode,query)
	o.run()