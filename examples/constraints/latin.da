def constraint(name='latinsquare', pars= {n,x}):
	# Variables:
	n: int						# size of row and column of the square
	x: dict(key=(ints(1,n),ints(1,n)),val=ints(1,n))
								# the assignment of values on the square
	# Constraints:
	# The Latin square constraint
	def latin():
		# all the cells in each row pair-wisely different
		each(i in ints(1,n), has=alldiff(x[i,j], j in ints(1,n)))
		# all the cells in each column pair-wisely different
		each(j in ints(1,n), has=alldiff(x[i,j], i in ints(1,n)))
	
	# Target:
	# return an assignment of the square satisfies the constraint
	return anyof(x, latin)



from pprint import pprint

x = [ [_,_,_,1,_,_,_,_,_,_],
	  [_,_,1,_,_,_,_,_,_,_],
	  [_,1,_,_,_,2,_,_,_,_],
	  [1,_,_,_,2,_,_,_,_,_],
	  [_,_,_,2,1,_,_,_,_,_],
	  [_,_,2,_,_,1,_,_,_,_],
	  [_,_,_,_,_,_,1,_,_,_],
	  [_,_,_,_,_,_,_,1,_,2],
	  [_,_,_,_,_,_,_,_,2,_],
	  [_,_,_,_,_,_,_,2,_,_] ]

result = query(constraint='latinsquare', n=10)
pprint(result)