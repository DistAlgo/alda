def csp_queen(n):
	# Variables:
	n: int  # size of the board
	q: dict[key:int[1:n],val:int[1:n]]
	        # an array of size n presenting the placement of queen on each row.
	        # q[i] = j queen at the ith column, jth row
	
	# Constraints:
	# inherent from definition of q: No queens appear on the same column
	row = alldiff(q)               # No queens appear on the same row
	def diagonal():                # No queens appear on the same diagonal
		alldiff(q[i]+i-1, i in int[1:n])
		alldiff(q[i]+n-i, i in int[1:n])	
	
	# Target:
	# Find a placement q of queen that satisfies the constraints
	return anyof(q, row, diagonal)



from pprint import pprint

result = csp_queen(n=8)
pprint(result)