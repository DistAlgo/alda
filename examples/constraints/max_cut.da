def constraint(name= 'max_cut', pars={vertex, edge}):
  # Variables:
  vertex: set[int]                            # set of vertices
  edge: dict(key= (vertex, vertex),val=int)   # set of edges with weight
  S: dict(key= vertex, val= ints(0,1))        # subset of vertices

  # Target:
  # maximize the total weight of edges between vertices inside S and outside S.
  obj: int = sumof(edge[i,j]*S[i]*(1-S[j]), i in vertex, j in vertex)
  return anyof(S, to_max(obj))



from pprint import pprint

# data from https://en.wikipedia.org/wiki/Maximum_cut
vertex = {1,2,3,4,5}
edge = [[0,1,0,1,0],
		[1,0,1,1,0],
		[0,1,0,0,1],
		[1,1,0,0,1],
		[0,0,1,1,0]]

result = query(constraint='max_cut')
pprint(result)